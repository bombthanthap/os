
Allocating common symbols
Common symbol       size              file

gpio                0x4               blink_c.o

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

                0x0000000000008000                . = 0x8000
                0x0000000000008000                __start = .
                0x0000000000008000                __text_start = .

.text           0x0000000000008000       0x7c
 *(.text.boot)
 .text.boot     0x0000000000008000       0x3c boot.o
                0x0000000000008000                _start
 *(.text)
 .text          0x000000000000803c       0x40 blink_c.o
                0x000000000000803c                RPI_GetSystemTimer
                0x0000000000008048                RPI_WaitMicroSeconds
 .text          0x000000000000807c        0x0 boot.o

.glue_7         0x000000000000807c        0x0
 .glue_7        0x000000000000807c        0x0 linker stubs

.glue_7t        0x000000000000807c        0x0
 .glue_7t       0x000000000000807c        0x0 linker stubs

.vfp11_veneer   0x000000000000807c        0x0
 .vfp11_veneer  0x000000000000807c        0x0 linker stubs

.v4_bx          0x000000000000807c        0x0
 .v4_bx         0x000000000000807c        0x0 linker stubs

.text.startup   0x000000000000807c       0x9c
 .text.startup  0x000000000000807c       0x9c blink_c.o
                0x000000000000807c                main

.iplt           0x0000000000008118        0x0
 .iplt          0x0000000000008118        0x0 boot.o

.rel.dyn        0x0000000000008118        0x0
 .rel.iplt      0x0000000000008118        0x0 boot.o
                0x0000000000009000                . = ALIGN (0x1000)
                0x0000000000009000                __text_end = .
                0x0000000000009000                __rodata_start = .

.rodata
 *(.rodata)
                0x0000000000009000                . = ALIGN (0x1000)
                0x0000000000009000                __rodata_end = .
                0x0000000000009000                __data_start = .

.data           0x0000000000009000        0x0
 *(.data)
 .data          0x0000000000009000        0x0 blink_c.o
 .data          0x0000000000009000        0x0 boot.o

.igot.plt       0x0000000000009000        0x0
 .igot.plt      0x0000000000009000        0x0 boot.o
                0x0000000000009000                . = ALIGN (0x1000)
                0x0000000000009000                __data_end = .
                0x0000000000009000                __bss_start = .

.bss            0x0000000000009000        0x4
                0x0000000000009000                bss = .
 *(.bss)
 .bss           0x0000000000009000        0x0 blink_c.o
 .bss           0x0000000000009000        0x0 boot.o
 COMMON         0x0000000000009000        0x4 blink_c.o
                0x0000000000009000                gpio
                0x000000000000a000                . = ALIGN (0x1000)
                0x000000000000a000                __bss_end = .
                0x000000000000a000                __end = .
LOAD blink_c.o
LOAD boot.o
OUTPUT(blink_c.elf elf32-littlearm)
LOAD linker stubs

.comment        0x0000000000000000       0x59
 .comment       0x0000000000000000       0x59 blink_c.o
                                         0x5a (size before relaxing)

.ARM.attributes
                0x0000000000000000       0x2d
 .ARM.attributes
                0x0000000000000000       0x2f blink_c.o
 .ARM.attributes
                0x000000000000002f       0x26 boot.o
